# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Buid App

on: workflow_dispatch

jobs:
  build:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # - name: Set up JDK 11
    #   uses: actions/setup-java@v3
    #   with:
    #     java-version: '11'
    #     distribution: 'temurin'
    #     cache: maven
    # - name: Build with Maven
    #   run: mvn -B package --file pom.xml
    # - name: upload artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: webapp-war
    #     path: target/WebApp.war
    #     retention-days: 2
    # - name: Download artifact
    #   uses: actions/download-artifact@v1
    #   with: 
    #     name: webapp-war
    
    # - name: Build and push image to Amazon ECR
    #   env:
    #     DCR_USER: ${{ secrets.DOCKER_USER }}
    #     DCR_PASSWD: ${{ secrets.DOCKER_PASSWORD }}
    #     IMAGE_TAG: 0.2
    #   run: |
    #     cp webapp-war/WebApp.war ./WebApp.war
    #     docker build -t yogita20/webapp:$IMAGE_TAG .
    #     docker login -u $DCR_USER -p $DCR_PASSWD
    #     echo "Pushing image to docker registry..."
    #     docker push yogita20/webapp:$IMAGE_TAG
    # - name: Gcloud Login
    #   uses: 'google-github-actions/auth@v2'
    #   with:
    #     project_id: 'expanded-port-427419-h3'
    #     workload_identity_provider: 'projects/64397744283/locations/global/workloadIdentityPools/github-access/providers/my-repo'

    # - id: environment
    #   name: Get project 
    #   run: |-
    #     export PROJECT_ID=$(gcloud projects list --format 'value(project_id)' --filter name=test-demo-project)
    #     echo "Project id is $(PROJECT_ID)"
    #     echo "::set-output name=GKE_PROJECT::$(PROJECT_ID)"

    # - id: get-credentials
    #   run: |-
    #    gcloud container cluster get-credentials ${cluster_name} \
    #        --region ${location} \
    #        --project ${{ steps.environement.output.GKE_PROJECT }}
    #   env:
    #       cluster_name: demo-cluster
    #       location: us-east1
    #       credentials: ${{ secrets.GCP_SECRET }}
    #       project_id: expanded-port-427419-h3

    - id: auth
      uses: google-github-actions/auth@v0.4.0
      with:
          token_format: "access_token"
          create_credentials_file: true
          activate_credentials_file: true
          workload_identity_provider: 'projects/64397744283/locations/global/workloadIdentityPools/github-access/providers/my-repo'
          service_account:  64397744283-compute@developer.gserviceaccount.com
          access_token_lifetime: '100s'
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0
    - name: set crdential_file
      run: gcloud auth login --cred-file=${{steps.auth.outputs.credentials_file_path}}
      
    - id: get-pods
      run: kubectl get pods -A 
        
        
        
    
        
  
