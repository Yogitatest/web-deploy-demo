# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on: workflow_dispatch

jobs:
  build:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: webapp-war
        path: target/WebApp.war
        retention-days: 2
    - name: Download artifact
      uses: actions/download-artifact@v1
      with: 
        name: webapp-war
    
    - name: Build and push image to Amazon ECR
      env:
        DCR_USER: ${{ secrets.DOCKER_USER }}
        DCR_PASSWD: ${{ secrets.DOCKER_PASSWORD }}
        IMAGE_TAG: 0.1
      run: |
        cp webapp-war/WebApp.war ./WebApp.war
        docker build -t yogita20/webapp:$IMAGE_TAG .
        docker login -u $DCR_USER -p $DCR_PASSWD
        echo "Pushing image to docker registry..."
        docker push yogita20/webapp:$IMAGE_TAG
        echo "::set-output name=image::yogita20/webapp:$IMAGE_TAG"
  
